#!/bin/sh
# 统计1天内connect&login数据

# initial
TARGET_FILE=$1
TARGET_USERID1=$2
TARGET_USERID2=$3
TARGET_START_DATE=$4
TARGET_END_DATE=$5
if [ -z "$TARGET_START_DATE" ] || [ -z "$TARGET_USERID1" ] || [ -z "$TARGET_USERID2" ] || [ -z "$TARGET_FILE" ]; then
  echo "check_camshare_conver_info.sh <outfile> <userid1> <userid2> <target start date[yyyy-mm-dd]> [target end date]"
  exit 0
fi

if [ -z "$TARGET_END_DATE" ]; then
  TARGET_END_DATE=$TARGET_START_DATE
fi

# remove file
rm -f $TARGET_FILE
TARGET_TEMP_FILE1=$TARGET_FILE".1.tmp"
TARGET_TEMP_FILE2=$TARGET_FILE".2.tmp"
rm -f $TARGET_TEMP_FILE1
rm -f $TARGET_TEMP_FILE2

# loop target date
TARGET_START_TIME=$(date -d "$TARGET_START_DATE 00:00:00" +%s)
TARGET_END_TIME=$(date -d "$TARGET_END_DATE 00:00:00" +%s)
while [[ $TARGET_START_TIME -le $TARGET_END_TIME ]]; do
       	THIS_DATE=$(date -d "@$TARGET_START_TIME" "+%Y-%m-%d")
	echo "------------------- $THIS_DATE video -------------------" >> $TARGET_FILE
	THIS_DATE_YEAR=$(date -d "$THIS_DATE" "+%Y")
	THIS_DATE_MONTH=$(date -d "$THIS_DATE" "+%m")
	THIS_DATE_DAY=$(date -d "$THIS_DATE" "+%d")
	VIDEO_FOLDER=/app/freeswitch/recordings/video_mp4/$THIS_DATE_YEAR/$THIS_DATE_MONTH/$THIS_DATE_DAY
	ls -l $VIDEO_FOLDER | grep "$TARGET_USERID1\|$TARGET_USERID2" >> $TARGET_FILE

        START_DATE=-1
        ((MAX_DATE=3+$START_DATE))
        ((LOG_FILE_TIME=$TARGET_START_TIME+$START_DATE*24*3600))
	while [[ $START_DATE -lt $MAX_DATE ]]; do
		# log time		
		TIME_FORMAT_LOG=$(date -d @$TARGET_START_TIME "+%Y-%m-%d")
		
		# log file
		TIME_FORMAT_LOG_FILE=$(date -d @$LOG_FILE_TIME "+%Y%m%d")

		# grep the date's log
		grep -s -h "$TIME_FORMAT_LOG" /app/CamShareServer/log/camshare_server/info/Log$TIME_FORMAT_LOG_FILE* > $TARGET_TEMP_FILE1

		# combine Login condition
		LOGIN_KEY="Freeswitch-事件处理-rtmp终端登陆"
		LOGIN_CONDITION_REX=""
		LOGIN_CONDITION_REX=$LOGIN_CONDITION_REX" -e \"$LOGIN_KEY.*$TARGET_USERID1\""
		LOGIN_CONDITION_REX=$LOGIN_CONDITION_REX" -e \"$LOGIN_KEY.*$TARGET_USERID2\""
		LOGIN_WEBSOCKET_KEY="Freeswitch-事件处理-websocket终端登录"
		LOGIN_CONDITION_REX=$LOGIN_CONDITION_REX" -e \"$LOGIN_WEBSOCKET_KEY.*$TARGET_USERID1\""
		LOGIN_CONDITION_REX=$LOGIN_CONDITION_REX" -e \"$LOGIN_WEBSOCKET_KEY.*$TARGET_USERID2\""

		# combine Logout condition
		LOGOUT_KEY="Freeswitch-事件处理-rtmp终端断开-有身份"
		LOGOUT_CONDITION_REX=""
		LOGOUT_CONDITION_REX=$LOGOUT_CONDITION_REX" -e \"$LOGOUT_KEY.*$TARGET_USERID1\""
		LOGOUT_CONDITION_REX=$LOGOUT_CONDITION_REX" -e \"$LOGOUT_KEY.*$TARGET_USERID2\""
		LOGOUT_WEBSOCKET_KEY="Freeswitch-事件处理-websocket终端断开"
		LOGOUT_CONDITION_REX=$LOGOUT_CONDITION_REX" -e \"$LOGOUT_WEBSOCKET_KEY.*$TARGET_USERID1\""
		LOGOUT_CONDITION_REX=$LOGOUT_CONDITION_REX" -e \"$LOGOUT_WEBSOCKET_KEY.*$TARGET_USERID2\""

		# combine MakeCall condition
		MAKECALL_KEY="Freeswitch-事件处理-增加会议室成员], user : "
		MAKECALL_KEY2=", conference : "
		MAKECALL_CONDITION_REX=""
		MAKECALL_CONDITION_REX=$MAKECALL_CONDITION_REX" -e \"$MAKECALL_KEY$TARGET_USERID1$MAKECALL_KEY2$TARGET_USERID1\""
		MAKECALL_CONDITION_REX=$MAKECALL_CONDITION_REX" -e \"$MAKECALL_KEY$TARGET_USERID1$MAKECALL_KEY2$TARGET_USERID2\""
		MAKECALL_CONDITION_REX=$MAKECALL_CONDITION_REX" -e \"$MAKECALL_KEY$TARGET_USERID2$MAKECALL_KEY2$TARGET_USERID2\""
		MAKECALL_CONDITION_REX=$MAKECALL_CONDITION_REX" -e \"$MAKECALL_KEY$TARGET_USERID2$MAKECALL_KEY2$TARGET_USERID1\""

		# combine Hangup condition
		HANGUP_KEY="Freeswitch-事件处理-删除会议室成员], user : "
		HANGUP_KEY2=", conference : "
		HANGUP_CONDITION_REX=""
		HANGUP_CONDITION_REX=$HANGUP_CONDITION_REX" -e \"$HANGUP_KEY$TARGET_USERID1$HANGUP_KEY2$TARGET_USERID1\""
		HANGUP_CONDITION_REX=$HANGUP_CONDITION_REX" -e \"$HANGUP_KEY$TARGET_USERID1$HANGUP_KEY2$TARGET_USERID2\""
		HANGUP_CONDITION_REX=$HANGUP_CONDITION_REX" -e \"$HANGUP_KEY$TARGET_USERID2$HANGUP_KEY2$TARGET_USERID2\""
		HANGUP_CONDITION_REX=$HANGUP_CONDITION_REX" -e \"$HANGUP_KEY$TARGET_USERID2$HANGUP_KEY2$TARGET_USERID1\""

		# combine fail condition
		ENTER_FAIL_KEY="外部服务(LiveChat)-收到命令:进入会议室认证结果-失败"
		ENTER_FAIL_CONDITION_REX=""
		ENTER_FAIL_CONDITION_REX=$ENTER_FAIL_CONDITION_REX" -e \"$ENTER_FAIL_KEY.*, fromId : $TARGET_USERID1.*, toId : $TARGET_USERID2\""
		ENTER_FAIL_CONDITION_REX=$ENTER_FAIL_CONDITION_REX" -e \"$ENTER_FAIL_KEY.*, fromId : $TARGET_USERID2.*, toId : $TARGET_USERID1\""
		KICKOFF_KEY="外部服务(LiveChat)-收到命令:从会议室踢出用户"
		KICKOFF_CONDITION_REX=""
		KICKOFF_CONDITION_REX=$KICKOFF_CONDITION_REX" -e \"$KICKOFF_KEY.*, fromId : $TARGET_USERID1.*, toId : $TARGET_USERID2\""
		KICKOFF_CONDITION_REX=$KICKOFF_CONDITION_REX" -e \"$KICKOFF_KEY.*, fromId : $TARGET_USERID2.*, toId : $TARGET_USERID1\""

		# grep log
		ALL_CONDITION_REX="$LOGIN_CONDITION_REX$LOGOUT_CONDITION_REX$MAKECALL_CONDITION_REX$HANGUP_CONDITION_REX$ENTER_FAIL_CONDITION_REX$KICKOFF_CONDITION_REX"
		COMMAND_STR="grep -s -h $ALL_CONDITION_REX $TARGET_TEMP_FILE1 >> $TARGET_TEMP_FILE2"
		eval $COMMAND_STR

		((LOG_FILE_TIME=$LOG_FILE_TIME+24*3600))
		((START_DATE++))
	done

	((TARGET_START_TIME=$TARGET_START_TIME+24*3600))
done

# combine log
echo "------------------- log -------------------" >> $TARGET_FILE
cat $TARGET_TEMP_FILE2 >> $TARGET_FILE
#sort -u $TARGET_TEMP_FILE2 >> $TARGET_FILE
rm -f $TARGET_TEMP_FILE1
rm -f $TARGET_TEMP_FILE2
